
import logging
import gtk
import gobject
from jarabe.model import bundleregistry
from jarabe.model import shell
from sugar.datastore import datastore
from glycogen.challenge import challrepo
from glycogen.challenge.challrepo import Challenge

_logger = logging.getLogger('FavoritesView')

logging.debug('GLYCOGEN: loading ChallBox')


class ChallBox(gtk.TreeView):
    """ Responsible for retrieving and displaying challenges for
    an activity given a bundle id.
    
    use show_challenges(bundle_id) to display challenges for an activity
    
    """

    def __init__(self):
        # make a new list
        
        self.listmodel = gtk.ListStore(str)
        #TODO add columns to store challenge id...
        #as long as this is possible with different types for challenge id
        

        
        gtk.TreeView.__init__(self, self.listmodel)
        
        self.column = gtk.TreeViewColumn('Challenge')
        self.append_column(self.column)
        self.cell = gtk.CellRendererText()
        self.column.pack_start(self.cell, True)
        self.column.add_attribute(self.cell, 'text', 0)

        self.show()
        
    def show_challenges(self, bundle_id):
        #TODO remove these
        #self.listmodel.append(['description string literal A'])
        #self.listmodel.append(['description string literal B'])
        
        #create fake challenge list
        #chal1 = Challenge(None, 'challenge1', 'complete challenge1 in record time', None)
        #chal2 = Challenge(None, 'challenge2', 'complete challenge2 in record time', None)
        #challenges = {chal1.get_id(): chal1,
        #              chal2.get_id(): chal2}
        
        #BUNDLE_ID = 'org.davidmason.mathogen_prac'
        #TODO cleanup
        BUNDLE_ID = bundle_id
        
        repository = challrepo.get_global_repository()
        challenges = repository.get_challenges(BUNDLE_ID)

        self.listmodel.clear()
        for challenge in challenges.values():
            self.listmodel.append([challenge.get_description()])
        
        
        
if __name__ == '__main__':
    thing = ChallBox()
