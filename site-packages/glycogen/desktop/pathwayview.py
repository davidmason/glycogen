# Copyright (C) 2006-2007 Red Hat, Inc.
# Copyright (C) 2008 One Laptop Per Child
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import gtk
import gobject

#from glycogen.desktop.activitybox import ActivityBox
#from glycogen.desktop.testbox import TestBox
from glycogen.desktop.challbox import ChallBox
from glycogen.desktop.activitylist import ActivityList

class PathwayView(gtk.VBox):
    # I am currently testing with a different gtk box for getting a list of
    # activities from scratch.

    def __init__(self, **kwargs):
        gtk.VBox.__init__(self, False, 0)

        # self.activity_box = ActivityBox(**kwargs)
        # self.pack_start(self.activity_box, True, True, 0)
        # self.activity_box.show()
        
        
        
        self.top = gtk.HBox(False, 0)
        self.pack_start(self.top, True, True, 0)
        self.top.show()
        
        self.bottom = gtk.HBox(False, 0)
        self.pack_start(self.bottom, True, True, 0)
        self.bottom.show()
        
        self.activity_list = ActivityList()
        self.activity_list.connect('cursor-changed', self.activity_selected_cb)
        self.top.pack_start(self.activity_list, True, True, 0)
        self.activity_list.show()
        
        self.challenge_list = ChallBox()
        self.top.pack_start(self.challenge_list, True, True, 0)
        self.challenge_list.show()
        
        self.pathway_list = gtk.Label('Test label for pathway list')
        self.bottom.pack_start(self.pathway_list, True, True, 0)
        self.pathway_list.show()
        
        self.pathway_display = gtk.Button('Test button for pathway display')
        self.bottom.pack_start(self.pathway_display, True, True, 0)
        self.pathway_display.show()
        
        self.show()
        
        
    def activity_selected_cb(self, widget, data=None):
        selection = self.activity_list.get_selection()  #gtk.TreeSelection
        tree_model, tree_iter = selection.get_selected()  # (gtk.TreeModel, gtk.TreeIter)
        bundle_id = tree_model.get_value(tree_iter, 0)  #iter, column
        
        self.challenge_list.show_challenges(bundle_id)
        
        
        
        
